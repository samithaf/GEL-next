# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- main
stages:
- stage: prepare
  jobs:
  - job: run_prepare
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Bash@3
      displayName: 'Create Artifact'
      inputs:
        targetType: 'inline'
        script: mkdir -p $(Build.SourcesDirectory)/dist/src && mkdir -p $(Build.SourcesDirectory)/dist/lib && echo '' >> $(Build.SourcesDirectory)/dist/lib/blank.txt && rsync -a --exclude={'**.git/','**test.*','**spec.*','**.vscode/','**dist/','**.md','**.svg','**.png','**.zip','**.yaml','**mocks/'} $(Build.SourcesDirectory)/ $(Build.SourcesDirectory)/dist/src/
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.SourcesDirectory)/dist' # string. Required. Root folder or file to archive. Default: $(Build.BinariesDirectory).
        includeRootFolder: false # boolean. Prepend root folder name to archive paths. Default: true.
      # Archive
        archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.
        #sevenZipCompression: 'normal' # 'ultra' | 'maximum' | 'normal' | 'fast' | 'fastest' | 'none'. Optional. Use when archiveType = 7z. 7z compression. Default: normal.
        #tarCompression: 'gz' # 'gz' | 'bz2' | 'xz' | 'none'. Optional. Use when archiveType = tar. Tar compression. Default: gz.
        archiveFile: '$(Build.ArtifactStagingDirectory)/source.zip' # string. Required. Archive file to create. Default: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.
        #replaceExistingArchive: true # boolean. Replace existing archive. Default: true.
        #verbose: false # boolean. Force verbose output. Default: false.
        #quiet: false # boolean. Force quiet output. Default: false.
    - task: CopyFiles@2
      displayName: 'Copy scripts'
      inputs:
        contents: '**/source.zip'
        targetFolder: '$(Build.ArtifactStagingDirectory)'
    - publish: '$(Build.ArtifactStagingDirectory)/source.zip'
      displayName: 'Publish script'
      artifact: drop

- stage: test
  dependsOn: prepare
  jobs:
  - job: run_test
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - download: current
      artifact: drop
    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: cd $(Pipeline.Workspace)/drop && ls && cd $(Build.SourcesDirectory) && ls -a
